{"version":3,"file":"39b52324549112b01c25a4a4c1c77cb838f627e1-62b04c793be5882fc927.js","mappings":"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","sources":["webpack://app/./src/components/fragments/post-image/styles.ts","webpack://app/./src/components/fragments/post-image/index.tsx","webpack://app/./src/components/fragments/post-header/index.tsx","webpack://app/./src/components/layouts/post/styles.tsx","webpack://app/./src/components/layouts/post/index.tsx","webpack://app/./src/providers/mdx-provider.tsx","webpack://app/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport { type AppTheme } from \"@n8v/app/theme\";\n\nexport const styles = {\n\timage: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tbackgroundColor: theme.palette.augmentColor({\n\t\t\t\tcolor: {\n\t\t\t\t\tmain: theme.palette.background.paper,\n\t\t\t\t},\n\t\t\t}).light,\n\t\t\tmaxWidth: \"100%\",\n\t\t}),\n\n\troot: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t\twidth: \"100%\",\n\t\t}),\n};\n","import Stack, { type StackProps } from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nimport { styles } from \"./styles\";\n\nexport type PostImageProps = Omit<\n\tStackProps<\n\t\t\"div\",\n\t\t{\n\t\t\tcaption?: React.ReactNode | string;\n\t\t\tsrc: string;\n\t\t}\n\t>,\n\t\"sx\"\n>;\n\nexport const PostImage = ({ caption, src, ...cardProps }: PostImageProps) => {\n\treturn (\n\t\t<Stack\n\t\t\talignItems=\"center\"\n\t\t\tcss={styles.root}\n\t\t\tdirection=\"column\"\n\t\t\tspacing={1}\n\t\t\t{...cardProps}\n\t\t>\n\t\t\t<img\n\t\t\t\talt={typeof caption === \"string\" ? caption : undefined}\n\t\t\t\tcss={styles.image}\n\t\t\t\tsrc={src}\n\t\t\t/>\n\t\t\t{typeof caption === \"string\" ? (\n\t\t\t\t<Typography variant=\"caption\">{caption}</Typography>\n\t\t\t) : (\n\t\t\t\tcaption\n\t\t\t)}\n\t\t</Stack>\n\t);\n};\n","import Stack, { type StackProps } from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { DateTime } from \"luxon\";\n\nexport type PostHeaderProps = Omit<\n\tStackProps<\n\t\t\"div\",\n\t\t{\n\t\t\tdate?: null | string;\n\t\t\ttitle?: null | string;\n\t\t}\n\t>,\n\t\"sx\"\n>;\n\nexport const PostHeader = ({ date, title, ...stackProps }: PostHeaderProps) => {\n\tconst formatterDate = date\n\t\t? DateTime.fromISO(date).toLocaleString(DateTime.DATE_FULL)\n\t\t: \"\";\n\n\treturn (\n\t\t<Stack spacing={1} {...stackProps}>\n\t\t\t<Typography variant=\"caption\">{formatterDate}</Typography>\n\t\t\t<Typography variant=\"h2\">{title}</Typography>\n\t\t</Stack>\n\t);\n};\n","import { css } from \"@emotion/react\";\nimport { type AppTheme } from \"@n8v/app/theme\";\n\nexport const styles = {\n\theader: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t}),\n\n\tmain: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t\tmarginBlockStart: theme.spacing(6),\n\t\t\tminHeight: \"95vh\",\n\t\t}),\n};\n","import { Container } from \"@mui/material\";\nimport {\n\tAppDrawer,\n\ttype AppDrawerProps,\n} from \"@n8v/app/components/fragments/app-drawer\";\nimport {\n\tAppFooter,\n\ttype AppFooterProps,\n} from \"@n8v/app/components/fragments/app-footer\";\nimport {\n\tAppHeader,\n\ttype AppHeaderProps,\n} from \"@n8v/app/components/fragments/app-header\";\nimport {\n\tPostHeader,\n\ttype PostHeaderProps,\n} from \"@n8v/app/components/fragments/post-header\";\nimport React from \"react\";\n\nimport { styles } from \"./styles\";\n\n// eslint-disable-next-line unicorn/prevent-abbreviations\nexport type PostTemplateProps = React.PropsWithChildren<{\n\tappDrawerProps: AppDrawerProps;\n\tappFooterProps: AppFooterProps;\n\tappHeaderProps: AppHeaderProps;\n\tpostHeaderProps: PostHeaderProps;\n}>;\n\nexport const PostTemplate = ({\n\tappDrawerProps,\n\tappFooterProps,\n\tappHeaderProps,\n\tchildren,\n\tpostHeaderProps,\n}: PostTemplateProps) => (\n\t<>\n\t\t<AppHeader {...appHeaderProps} />\n\t\t<AppDrawer {...appDrawerProps} />\n\t\t<Container css={styles.main} maxWidth=\"md\">\n\t\t\t<PostHeader {...postHeaderProps} css={styles.header} />\n\t\t\t{children}\n\t\t</Container>\n\t\t<AppFooter {...appFooterProps} />\n\t</>\n);\n","import \"prismjs/themes/prism-okaidia.css\";\n\nimport type { AppTheme } from \"@n8v/app/theme\";\n\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nexport type AppMDXProviderProps = React.PropsWithChildren<object>;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst h1 = (props: any) => <Typography gutterBottom variant=\"h3\" {...props} />;\nconst h2 = (props: any) => <Typography gutterBottom variant=\"h4\" {...props} />;\nconst h3 = (props: any) => <Typography gutterBottom variant=\"h5\" {...props} />;\nconst h4 = (props: any) => <Typography gutterBottom variant=\"h6\" {...props} />;\nconst h5 = (props: any) => <Typography gutterBottom variant=\"h7\" {...props} />;\nconst h6 = (props: any) => (\n\t<Typography gutterBottom variant=\"subtitle1\" {...props} />\n);\nconst text = (props: any) => <Typography variant=\"body1\" {...props} />;\n\nconst strong = (props: any) => (\n\t<Typography\n\t\tcomponent=\"strong\"\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t})}\n\t\tvariant=\"body1\"\n\t\t{...props}\n\t/>\n);\n\nconst p = (props: any) => (\n\t<Typography\n\t\t{...props}\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tmarginBlockEnd: theme.spacing(1),\n\t\t})}\n\t\tparagraph\n\t\tvariant=\"body1\"\n\t/>\n);\n\nconst ul = (props: any) => (\n\t<ul\n\t\t{...props}\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tmarginBlockEnd: theme.spacing(2),\n\t\t\tmarginBlockStart: theme.spacing(0),\n\t\t})}\n\t/>\n);\n\nconst li = (props: any) => <li {...props} css={{}} />;\n\nconst a = (props: any) => <Link component=\"a\" target=\"_blank\" {...props} />;\n\nconst defaultComponents = {\n\ta,\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6,\n\tli,\n\tp,\n\tstrong,\n\ttext,\n\tul,\n} satisfies React.ComponentProps<typeof MDXProvider>[\"components\"];\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport const AppMDXProvider = ({ children }: AppMDXProviderProps) => (\n\t<MDXProvider components={defaultComponents}>{children}</MDXProvider>\n);\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["styles","image","theme","css","backgroundColor","palette","augmentColor","color","main","background","paper","light","maxWidth","root","marginBlockEnd","spacing","width","PostImage","_ref","caption","src","cardProps","_objectWithoutPropertiesLoose","_excluded","___EmotionJSX","Stack","_extends","alignItems","direction","alt","undefined","Typography","variant","PostHeader","date","title","stackProps","formatterDate","DateTime","fromISO","toLocaleString","DATE_FULL","header","marginBlockStart","minHeight","PostTemplate","appDrawerProps","appFooterProps","appHeaderProps","children","postHeaderProps","React","AppHeader","AppDrawer","Container","AppFooter","name","defaultComponents","a","props","Link","component","target","h1","gutterBottom","h2","h3","h4","h5","h6","li","p","paragraph","strong","fontWeight","typography","fontWeightBold","text","ul","AppMDXProvider","_ref2","MDXProvider","components","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}