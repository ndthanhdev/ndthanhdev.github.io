{"version":3,"file":"fbdf2655-b8a0506630c231738ed4.js","mappings":"2RAqBO,MAAMA,EAAS,CACrBC,KAAOC,IACNC,EAAAA,EAAAA,IAAI,CACH,CAAC,MAAMC,EAAAA,EAAcC,OAAU,CAC9B,CAACH,EAAMI,YAAYC,GAAG,OAAQ,CAC7BC,MAAO,KAER,CAACN,EAAMI,YAAYC,GAAG,OAAQ,CAC7BC,MAAO,OAGT,aAEFC,OAASP,IACRC,EAAAA,EAAAA,IAAI,CACHO,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBC,QAASX,EAAMY,QAAQ,IACvB,aAEFC,QAAS,CACRd,KAAOC,IAAoBC,EAAAA,EAAAA,IAAI,CAAEU,QAASX,EAAMY,QAAQ,IAAI,aAC5DE,QAAUd,IACTC,EAAAA,EAAAA,IAAI,CACHc,MAAOf,EAAMgB,QAAQC,KAAKC,UAC1BC,eAAgBnB,EAAMY,QAAQ,IAC9B,cAGHQ,YAAcpB,IACbC,EAAAA,EAAAA,IAAI,CACHK,MAAO,OACP,CAAC,MAAMe,EAAAA,EAAoBtB,MAAS,CACnCO,MAAO,SAER,cAGUgB,EAAUC,IAMF,IANG,SACvBC,EAAQ,KACRC,EAAI,QACJC,EAAO,UACPC,EAAS,kBACTC,GACcL,EACd,OACCM,EAAAA,EAAAA,IAACC,EAAAA,GAAM,CAAC7B,IAAKH,EAAOC,KAAMgC,OAAO,QAAQN,KAAMA,EAAMC,QAASA,IAC7DG,EAAAA,EAAAA,IAACG,EAAAA,EAAG,CAAC/B,IAAKH,EAAOS,SAChBsB,EAAAA,EAAAA,IAACI,EAAAA,EAAU,CAACC,QAAQ,QAAQC,WAAW,OAAM,aAG7CN,EAAAA,EAAAA,IAACO,EAAAA,EAAU,CAACrB,MAAM,UAAUsB,QAASX,EAASY,KAAK,QAClDT,EAAAA,EAAAA,IAACU,EAAAA,EAAS,CAACxB,MAAM,UAAUyB,SAAS,aAGtCX,EAAAA,EAAAA,IAACY,EAAAA,EAAO,OACRZ,EAAAA,EAAAA,IAACG,EAAAA,EAAG,CAAC/B,IAAKH,EAAOe,QAAQd,OACxB8B,EAAAA,EAAAA,IAACI,EAAAA,EAAU,CAAChC,IAAKH,EAAOe,QAAQC,SAAS,eACzCe,EAAAA,EAAAA,IAACa,EAAAA,EAAiB,CACjBzC,IAAKH,EAAOsB,YACZuB,MAAOhB,EACPiB,WAAS,EACTC,SAAUA,CAACC,EAAGC,IACbA,IAAQnB,aAAiB,EAAjBA,EAAoBkB,EAAGC,MAGhClB,EAAAA,EAAAA,IAACmB,EAAAA,EAAY,CAACL,MAAOM,EAAAA,GAAUC,QAC9BrB,EAAAA,EAAAA,IAACsB,EAAAA,EAAa,QAEftB,EAAAA,EAAAA,IAACmB,EAAAA,EAAY,CAACL,MAAOM,EAAAA,GAAUG,KAAM,aAAW,aAC/CvB,EAAAA,EAAAA,IAACwB,EAAAA,EAAY,SAIf7B,EACO,C","sources":["webpack://ndthanhdev/./src/layouts/menu/menu.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { AppTheme, ThemeMode } from \"@/shell/theme\";\nimport Drawer, { drawerClasses } from \"@mui/material/Drawer\";\nimport ToggleButton, { toggleButtonClasses } from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport DarkModeIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport LightModeIcon from \"@mui/icons-material/LightModeOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { css } from \"@emotion/react\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nexport type AppMenuProps = React.PropsWithChildren<{\n\topen?: boolean;\n\tonClose?: () => void;\n\tthemeMode?: ThemeMode;\n\tonThemeModeChange?: (e: any, mode: ThemeMode) => void;\n}>;\n\nexport const styles = {\n\troot: (theme: AppTheme) =>\n\t\tcss({\n\t\t\t[`& .${drawerClasses.paper}`]: {\n\t\t\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\t\t\twidth: 310,\n\t\t\t\t},\n\t\t\t\t[theme.breakpoints.up(\"lg\")]: {\n\t\t\t\t\twidth: 360,\n\t\t\t\t},\n\t\t\t},\n\t\t}),\n\n\theader: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tdisplay: \"flex\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"space-between\",\n\t\t\tpadding: theme.spacing(2),\n\t\t}),\n\n\tsection: {\n\t\troot: (theme: AppTheme) => css({ padding: theme.spacing(2) }),\n\t\theading: (theme: AppTheme) =>\n\t\t\tcss({\n\t\t\t\tcolor: theme.palette.text.secondary,\n\t\t\t\tmarginBlockEnd: theme.spacing(1),\n\t\t\t}),\n\t},\n\n\ttoggleGroup: (theme: AppTheme) =>\n\t\tcss({\n\t\t\twidth: \"100%\",\n\t\t\t[`& .${toggleButtonClasses.root}`]: {\n\t\t\t\twidth: \"100%\",\n\t\t\t},\n\t\t}),\n};\n\nexport const AppMenu = ({\n\tchildren,\n\topen,\n\tonClose,\n\tthemeMode,\n\tonThemeModeChange,\n}: AppMenuProps) => {\n\treturn (\n\t\t<Drawer css={styles.root} anchor=\"right\" open={open} onClose={onClose}>\n\t\t\t<Box css={styles.header}>\n\t\t\t\t<Typography variant=\"body1\" fontWeight=\"500\">\n\t\t\t\t\tSettings\n\t\t\t\t</Typography>\n\t\t\t\t<IconButton color=\"inherit\" onClick={onClose} edge=\"end\">\n\t\t\t\t\t<CloseIcon color=\"primary\" fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t</Box>\n\t\t\t<Divider />\n\t\t\t<Box css={styles.section.root}>\n\t\t\t\t<Typography css={styles.section.heading}>Theme Mode</Typography>\n\t\t\t\t<ToggleButtonGroup\n\t\t\t\t\tcss={styles.toggleGroup}\n\t\t\t\t\tvalue={themeMode}\n\t\t\t\t\texclusive\n\t\t\t\t\tonChange={(e, mode) =>\n\t\t\t\t\t\tmode && onThemeModeChange?.(e, mode as ThemeMode)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<ToggleButton value={ThemeMode.Light}>\n\t\t\t\t\t\t<LightModeIcon />\n\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t<ToggleButton value={ThemeMode.Dark} aria-label=\"centered\">\n\t\t\t\t\t\t<DarkModeIcon />\n\t\t\t\t\t</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</Box>\n\t\t\t{children}\n\t\t</Drawer>\n\t);\n};\n"],"names":["styles","root","theme","css","drawerClasses","paper","breakpoints","up","width","header","display","alignItems","justifyContent","padding","spacing","section","heading","color","palette","text","secondary","marginBlockEnd","toggleGroup","toggleButtonClasses","AppMenu","_ref","children","open","onClose","themeMode","onThemeModeChange","___EmotionJSX","Drawer","anchor","Box","Typography","variant","fontWeight","IconButton","onClick","edge","CloseIcon","fontSize","Divider","ToggleButtonGroup","value","exclusive","onChange","e","mode","ToggleButton","ThemeMode","Light","LightModeIcon","Dark","DarkModeIcon"],"sourceRoot":""}