{"version":3,"file":"f68a7834-4219cdf976c2e4252457.js","mappings":"sSAuBA,MAAMA,EAAS,CACdC,OAASC,IACRC,EAAAA,EAAAA,IAAI,CACHC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,gBAAiBL,EAAMM,QAAQC,WAAWC,OAC1C,aAEFC,KAAM,CACLC,KAAOV,IACNC,EAAAA,EAAAA,IAAI,CACHU,IAAKX,EAAMY,QAAQ,GACnBC,SAAU,OACVC,cAAe,aACf,cAGHC,MAAO,CACNL,KAAOV,IACNC,EAAAA,EAAAA,IAAI,CAAEU,IAAKX,EAAMY,QAAQ,GAAIC,SAAU,SAAS,cAGlDG,QAAUhB,IACTC,EAAAA,EAAAA,IAAI,CACHgB,KAAM,EACNC,MAAO,OACPC,SAAUnB,EAAMoB,YAAYC,OAAOC,GACnCpB,QAAS,OACTqB,oBAAqB,gBACrBC,iBAAkB,MAClBC,kBAAkB,iCAGlBrB,WAAY,UACZ,aAEFsB,MAAQ1B,IACPC,EAAAA,EAAAA,IAAI,CACH0B,WAAY3B,EAAM4B,WAAWC,gBAC7B,cAGUC,EAAaC,IAKF,IALG,SAC1BC,EAAQ,eACRC,EAAc,UACdC,EAAS,kBACTC,GACiBJ,EACjB,OACCK,EAAAA,EAAAA,IAAAC,EAAAA,SAAA,MACCD,EAAAA,EAAAA,IAACE,EAAY,MACZF,EAAAA,EAAAA,IAACG,EAAAA,EAAM,CAACtC,IAAKH,EAAOC,SACnBqC,EAAAA,EAAAA,IAACI,EAAAA,EAAO,CAACvC,IAAKH,EAAOkB,UACpBoB,EAAAA,EAAAA,IAACK,EAAAA,EAAK,CAACxC,IAAKH,EAAOW,KAAKC,KAAMgC,UAAU,MAAMtC,WAAW,WACxDgC,EAAAA,EAAAA,IAACO,EAAAA,EAAI,CACJC,UAAWC,EAAAA,KACX5C,IAAKH,EAAO4B,MACZoB,QAAQ,KACRC,UAAU,OACVC,GAAG,KACH,eAGDZ,EAAAA,EAAAA,IAACa,EAAAA,EAAM,CACNL,UAAWC,EAAAA,KACXC,QAAQ,OACRI,KAAK,QACLF,GAAG,UACH,UAGDZ,EAAAA,EAAAA,IAACa,EAAAA,EAAM,CACNL,UAAWC,EAAAA,KACXC,QAAQ,OACRI,KAAK,QACLF,GAAG,aACH,cAIFZ,EAAAA,EAAAA,IAACK,EAAAA,EAAK,CAACxC,IAAKH,EAAOiB,MAAML,KAAMgC,UAAU,MAAMtC,WAAW,WACzDgC,EAAAA,EAAAA,IAACe,EAAAA,EAAU,CACVD,KAAK,QACLE,KAAK,MACLC,MAAM,UACNC,QAASnB,GAERD,IAAcqB,EAAAA,GAAUC,OACxBpB,EAAAA,EAAAA,IAACqB,EAAAA,EAAqB,OAEtBrB,EAAAA,EAAAA,IAACsB,EAAAA,EAAoB,QAGvBtB,EAAAA,EAAAA,IAACe,EAAAA,EAAU,CAACE,MAAM,UAAUH,KAAK,QAAQI,QAASrB,IACjDG,EAAAA,EAAAA,IAACuB,EAAAA,EAAgB,YAMtBvB,EAAAA,EAAAA,IAACI,EAAAA,EAAO,MACPR,EACC,EAaL,SAASM,EAAasB,GACrB,MAAM,SAAE5B,EAAQ,OAAE6B,GAAWD,EAIvBE,GAAUC,EAAAA,EAAAA,GAAiB,CAChCC,OAAQH,EAASA,SAAWI,IAG7B,OACC7B,EAAAA,EAAAA,IAAC8B,EAAAA,EAAK,CAACC,QAAQ,EAAOzB,UAAU,OAAO0B,IAAKN,GAC1C9B,EAGJ,C","sources":["webpack://ndthanhdev/./src/layouts/main/main.tsx"],"sourcesContent":["import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\nimport Slide from \"@mui/material/Slide\";\nimport Link from \"@mui/material/Link\";\nimport Button from \"@mui/material/Button\";\nimport { AppTheme, ThemeMode } from \"@/shell/theme\";\nimport { css } from \"@emotion/react\";\nimport Stack from \"@mui/material/Stack\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport IconButton from \"@mui/material/IconButton\";\n\nexport type MainLayoutProps = React.PropsWithChildren<{\n\tonOpenSettings?: (e: any) => void;\n\n\tthemeMode?: ThemeMode;\n\tonToggleThemeMode?: (e: any) => void;\n}>;\n\nconst styles = {\n\tappBar: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: \"column\",\n\t\t\talignItems: \"center\",\n\t\t\tbackgroundColor: theme.palette.background.paper,\n\t\t}),\n\n\tleft: {\n\t\troot: (theme: AppTheme) =>\n\t\t\tcss({\n\t\t\t\tgap: theme.spacing(2),\n\t\t\t\tgridArea: \"left\",\n\t\t\t\ttextTransform: \"uppercase\",\n\t\t\t}),\n\t},\n\n\tright: {\n\t\troot: (theme: AppTheme) =>\n\t\t\tcss({ gap: theme.spacing(2), gridArea: \"right\" }),\n\t},\n\n\ttoolbar: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tflex: 1,\n\t\t\twidth: \"100%\",\n\t\t\tmaxWidth: theme.breakpoints.values.lg,\n\t\t\tdisplay: \"grid\",\n\t\t\tgridTemplateColumns: \"auto 1fr auto\",\n\t\t\tgridTemplateRows: \"1fr\",\n\t\t\tgridTemplateAreas: `\\\n\t\t\t\t\"left . right\"\n\t\t\t`,\n\t\t\talignItems: \"center\",\n\t\t}),\n\n\tbrand: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t}),\n};\n\nexport const MainLayout = ({\n\tchildren,\n\tonOpenSettings,\n\tthemeMode,\n\tonToggleThemeMode,\n}: MainLayoutProps) => {\n\treturn (\n\t\t<>\n\t\t\t<HideOnScroll>\n\t\t\t\t<AppBar css={styles.appBar}>\n\t\t\t\t\t<Toolbar css={styles.toolbar}>\n\t\t\t\t\t\t<Stack css={styles.left.root} direction=\"row\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tcomponent={GatsbyLink}\n\t\t\t\t\t\t\t\tcss={styles.brand}\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tunderline=\"none\"\n\t\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tndthanhdev\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcomponent={GatsbyLink}\n\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tto=\"/about\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tabout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcomponent={GatsbyLink}\n\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tto=\"/projects\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tProjects\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t<Stack css={styles.right.root} direction=\"row\" alignItems=\"center\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={onToggleThemeMode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{themeMode === ThemeMode.Light ? (\n\t\t\t\t\t\t\t\t\t<LightModeOutlinedIcon />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<DarkModeOutlinedIcon />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<IconButton color=\"primary\" size=\"large\" onClick={onOpenSettings}>\n\t\t\t\t\t\t\t\t<MenuOutlinedIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t\t<Toolbar />\n\t\t\t{children}\n\t\t</>\n\t);\n};\n\ninterface Props {\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow?: () => Window;\n\tchildren: React.ReactElement;\n}\n\nfunction HideOnScroll(props: Props) {\n\tconst { children, window } = props;\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\n\t// will default to window.\n\t// This is only being set here because the demo is in an iframe.\n\tconst trigger = useScrollTrigger({\n\t\ttarget: window ? window() : undefined,\n\t});\n\n\treturn (\n\t\t<Slide appear={false} direction=\"down\" in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n}\n"],"names":["styles","appBar","theme","css","display","flexDirection","alignItems","backgroundColor","palette","background","paper","left","root","gap","spacing","gridArea","textTransform","right","toolbar","flex","width","maxWidth","breakpoints","values","lg","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","brand","fontWeight","typography","fontWeightBold","MainLayout","_ref","children","onOpenSettings","themeMode","onToggleThemeMode","___EmotionJSX","React","HideOnScroll","AppBar","Toolbar","Stack","direction","Link","component","GatsbyLink","variant","underline","to","Button","size","IconButton","edge","color","onClick","ThemeMode","Light","LightModeOutlinedIcon","DarkModeOutlinedIcon","MenuOutlinedIcon","props","window","trigger","useScrollTrigger","target","undefined","Slide","appear","in"],"sourceRoot":""}