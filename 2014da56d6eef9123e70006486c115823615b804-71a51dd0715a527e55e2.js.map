{"version":3,"file":"2014da56d6eef9123e70006486c115823615b804-71a51dd0715a527e55e2.js","mappings":"kLAGO,MAAMA,EAAS,CACrBC,GAAE,CAAAC,KAAC,IAADF,OAAC,IAEHG,EAAIC,IACHC,EAAAA,EAAAA,IAAI,CACHC,eAAgBF,EAAMG,QAAQ,IAC9B,aAEFC,OAASJ,IACRC,EAAAA,EAAAA,IAAI,CACHI,WAAYL,EAAMM,WAAWC,gBAC7B,aAEFC,GAAKR,IACJC,EAAAA,EAAAA,IAAI,CACHC,eAAgBF,EAAMG,QAAQ,GAC9BM,iBAAkBT,EAAMG,QAAQ,IAChC,cCoBGO,EAAoB,CACzBC,EAHUC,IAAeC,EAAAA,EAAAA,GAACC,EAAAA,GAAIC,EAAAA,EAAAA,GAAA,CAACC,UAAU,IAAIC,OAAO,UAAaL,IAIjEM,GA/BWN,IAAeC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACK,cAAY,EAACC,QAAQ,MAAST,IAgCpEU,GA/BWV,IAAeC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACK,cAAY,EAACC,QAAQ,MAAST,IAgCpEW,GA/BWX,IAAeC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACK,cAAY,EAACC,QAAQ,MAAST,IAgCpEY,GA/BWZ,IAAeC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACK,cAAY,EAACC,QAAQ,MAAST,IAgCpEa,GA/BWb,IAAeC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACK,cAAY,EAACC,QAAQ,MAAST,IAgCpEc,GA/BWd,IACXC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACK,cAAY,EAACC,QAAQ,aAAgBT,IA+BjDf,GAZWe,IAAeC,EAAAA,EAAAA,GAAA,MAAAE,EAAAA,EAAAA,GAAA,GAAQH,EAAK,CAAEX,IAAKL,EAAOC,MAarDE,EAnBUa,IACVC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,GAAKH,EAAK,CAAEX,IAAKL,EAAOG,EAAG4B,WAAS,EAACN,QAAQ,WAmBxDjB,OA7BeQ,IACfC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CACVC,UAAU,SACVf,IAAKL,EAAOQ,OACZiB,QAAQ,SACJT,IAyBLgB,KAhCahB,IAAeC,EAAAA,EAAAA,GAACM,EAAAA,GAAUJ,EAAAA,EAAAA,GAAA,CAACM,QAAQ,SAAYT,IAiC5DJ,GAlBWI,IAAeC,EAAAA,EAAAA,GAAA,MAAAE,EAAAA,EAAAA,GAAA,GAAQH,EAAK,CAAEX,IAAKL,EAAOY,OAsBzCqB,EAAiBC,IAAA,IAAC,SAAEC,GAA+BD,EAAA,OAC/DjB,EAAAA,EAAAA,GAACmB,EAAAA,EAAW,CAACC,WAAYvB,GAAoBqB,EAAuB,C,4FC/BrE,MAAMG,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBH,GAC/B,MAAMI,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfF,EACFA,EAAWI,GAGb,IAAIA,KAAsBJ,EACnC,GACA,CAACI,EAAmBJ,GAExB,CAWO,SAASD,EAAYM,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWL,WACdK,EAAWL,WAAWC,GACtBI,EAAWL,YAAcC,EAEfE,EAAiBE,EAAWL,YAGvC,gBACLE,EAAWM,SACX,CAACC,MAAOH,GACRD,EAAWP,SAEf,C","sources":["webpack://app/./src/providers/mdx-provider/styles.ts","webpack://app/./src/providers/mdx-provider/index.tsx","webpack://app/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport { type AppTheme } from \"@n8v/app/theme\";\n\nexport const styles = {\n\tli: css({}),\n\n\tp: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(1),\n\t\t}),\n\n\tstrong: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t}),\n\n\tul: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(2),\n\t\t\tmarginBlockStart: theme.spacing(0),\n\t\t}),\n};\n","import \"prismjs/themes/prism-okaidia.css\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nimport { styles } from \"./styles\";\n\nexport type AppMDXProviderProps = React.PropsWithChildren<object>;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst h1 = (props: any) => <Typography gutterBottom variant=\"h3\" {...props} />;\nconst h2 = (props: any) => <Typography gutterBottom variant=\"h4\" {...props} />;\nconst h3 = (props: any) => <Typography gutterBottom variant=\"h5\" {...props} />;\nconst h4 = (props: any) => <Typography gutterBottom variant=\"h6\" {...props} />;\nconst h5 = (props: any) => <Typography gutterBottom variant=\"h7\" {...props} />;\nconst h6 = (props: any) => (\n\t<Typography gutterBottom variant=\"subtitle1\" {...props} />\n);\nconst text = (props: any) => <Typography variant=\"body1\" {...props} />;\n\nconst strong = (props: any) => (\n\t<Typography\n\t\tcomponent=\"strong\"\n\t\tcss={styles.strong}\n\t\tvariant=\"body1\"\n\t\t{...props}\n\t/>\n);\n\nconst p = (props: any) => (\n\t<Typography {...props} css={styles.p} paragraph variant=\"body1\" />\n);\n\nconst ul = (props: any) => <ul {...props} css={styles.ul} />;\n\nconst li = (props: any) => <li {...props} css={styles.li} />;\n\nconst a = (props: any) => <Link component=\"a\" target=\"_blank\" {...props} />;\n\nconst defaultComponents = {\n\ta,\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6,\n\tli,\n\tp,\n\tstrong,\n\ttext,\n\tul,\n} satisfies React.ComponentProps<typeof MDXProvider>[\"components\"];\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport const AppMDXProvider = ({ children }: AppMDXProviderProps) => (\n\t<MDXProvider components={defaultComponents}>{children}</MDXProvider>\n);\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["styles","li","name","p","theme","css","marginBlockEnd","spacing","strong","fontWeight","typography","fontWeightBold","ul","marginBlockStart","defaultComponents","a","props","___EmotionJSX","Link","_extends","component","target","h1","Typography","gutterBottom","variant","h2","h3","h4","h5","h6","paragraph","text","AppMDXProvider","_ref","children","MDXProvider","components","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}