{"version":3,"file":"39b52324549112b01c25a4a4c1c77cb838f627e1-a251cb458c373f6a3136.js","mappings":"0KAGO,MAAMA,EAAS,CACrBC,MAAQC,IACPC,EAAAA,EAAAA,IAAI,CACHC,gBAAiBF,EAAMG,QAAQC,aAAa,CAC3CC,MAAO,CACNC,KAAMN,EAAMG,QAAQI,WAAWC,SAE9BC,MACHC,SAAU,QACV,aAEFC,KAAOX,IACNC,EAAAA,EAAAA,IAAI,CACHW,eAAgBZ,EAAMa,QAAQ,GAC9BC,MAAO,QACP,cCDUC,EAAYC,IAAqD,IAApD,QAAEC,EAAO,IAAEC,KAAQC,GAA2BH,EACvE,OACCI,EAAAA,EAAAA,GAACC,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACLC,WAAW,SACXtB,IAAKH,EAAOa,KACZa,UAAU,SACVX,QAAS,GACLM,IAEJC,EAAAA,EAAAA,GAAA,OACCK,IAAwB,iBAAZR,EAAuBA,OAAUS,EAC7CzB,IAAKH,EAAOC,MACZmB,IAAKA,IAEc,iBAAZD,GACPG,EAAAA,EAAAA,GAACO,EAAAA,EAAU,CAACC,QAAQ,WAAWX,GAE/BA,EAEM,C,oJCrBH,MAAMY,EAAab,IAAsD,IAArD,KAAEc,EAAI,MAAEC,KAAUC,GAA6BhB,EACzE,MAAMiB,EAAgBH,EACnBI,EAAAA,GAASC,QAAQL,GAAMM,eAAeF,EAAAA,GAASG,WAC/C,GAEH,OACCjB,EAAAA,EAAAA,GAACC,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CAACT,QAAS,GAAOmB,IACtBZ,EAAAA,EAAAA,GAACO,EAAAA,EAAU,CAACC,QAAQ,WAAWK,IAC/Bb,EAAAA,EAAAA,GAACO,EAAAA,EAAU,CAACC,QAAQ,MAAMG,GACnB,E,cCrBH,MAAMjC,EAAS,CACrBwC,OAAStC,IACRC,EAAAA,EAAAA,IAAI,CACHW,eAAgBZ,EAAMa,QAAQ,IAC9B,aAEFP,KAAON,IACNC,EAAAA,EAAAA,IAAI,CACHW,eAAgBZ,EAAMa,QAAQ,GAC9B0B,iBAAkBvC,EAAMa,QAAQ,GAChC2B,UAAW,QACX,cCeUC,EAAezB,IAAA,IAAC,eAC5B0B,EAAc,eACdC,EAAc,eACdC,EAAc,SACdC,EAAQ,gBACRC,GACmB9B,EAAA,OACnBI,EAAAA,EAAAA,GAAA2B,EAAAA,SAAA,MACC3B,EAAAA,EAAAA,GAAC4B,EAAAA,EAAcJ,IACfxB,EAAAA,EAAAA,GAAC6B,EAAAA,EAAcP,IACftB,EAAAA,EAAAA,GAAC8B,EAAAA,EAAS,CAACjD,IAAKH,EAAOQ,KAAMI,SAAS,OACrCU,EAAAA,EAAAA,GAACS,GAAUP,EAAAA,EAAAA,GAAA,GAAKwB,EAAe,CAAE7C,IAAKH,EAAOwC,UAC5CO,IAEFzB,EAAAA,EAAAA,GAAC+B,EAAAA,EAAcR,GACb,C","sources":["webpack://app/./src/components/fragments/post-image/styles.ts","webpack://app/./src/components/fragments/post-image/index.tsx","webpack://app/./src/components/fragments/post-header/index.tsx","webpack://app/./src/components/layouts/post/styles.tsx","webpack://app/./src/components/layouts/post/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport { type AppTheme } from \"@n8v/app/theme\";\n\nexport const styles = {\n\timage: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tbackgroundColor: theme.palette.augmentColor({\n\t\t\t\tcolor: {\n\t\t\t\t\tmain: theme.palette.background.paper,\n\t\t\t\t},\n\t\t\t}).light,\n\t\t\tmaxWidth: \"100%\",\n\t\t}),\n\n\troot: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t\twidth: \"100%\",\n\t\t}),\n};\n","import Stack, { type StackProps } from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nimport { styles } from \"./styles\";\n\nexport type PostImageProps = Omit<\n\tStackProps<\n\t\t\"div\",\n\t\t{\n\t\t\tcaption?: React.ReactNode | string;\n\t\t\tsrc: string;\n\t\t}\n\t>,\n\t\"sx\"\n>;\n\nexport const PostImage = ({ caption, src, ...cardProps }: PostImageProps) => {\n\treturn (\n\t\t<Stack\n\t\t\talignItems=\"center\"\n\t\t\tcss={styles.root}\n\t\t\tdirection=\"column\"\n\t\t\tspacing={1}\n\t\t\t{...cardProps}\n\t\t>\n\t\t\t<img\n\t\t\t\talt={typeof caption === \"string\" ? caption : undefined}\n\t\t\t\tcss={styles.image}\n\t\t\t\tsrc={src}\n\t\t\t/>\n\t\t\t{typeof caption === \"string\" ? (\n\t\t\t\t<Typography variant=\"caption\">{caption}</Typography>\n\t\t\t) : (\n\t\t\t\tcaption\n\t\t\t)}\n\t\t</Stack>\n\t);\n};\n","import Stack, { type StackProps } from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { DateTime } from \"luxon\";\n\nexport type PostHeaderProps = Omit<\n\tStackProps<\n\t\t\"div\",\n\t\t{\n\t\t\tdate?: null | string;\n\t\t\ttitle?: null | string;\n\t\t}\n\t>,\n\t\"sx\"\n>;\n\nexport const PostHeader = ({ date, title, ...stackProps }: PostHeaderProps) => {\n\tconst formatterDate = date\n\t\t? DateTime.fromISO(date).toLocaleString(DateTime.DATE_FULL)\n\t\t: \"\";\n\n\treturn (\n\t\t<Stack spacing={1} {...stackProps}>\n\t\t\t<Typography variant=\"caption\">{formatterDate}</Typography>\n\t\t\t<Typography variant=\"h2\">{title}</Typography>\n\t\t</Stack>\n\t);\n};\n","import { css } from \"@emotion/react\";\nimport { type AppTheme } from \"@n8v/app/theme\";\n\nexport const styles = {\n\theader: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t}),\n\n\tmain: (theme: AppTheme) =>\n\t\tcss({\n\t\t\tmarginBlockEnd: theme.spacing(4),\n\t\t\tmarginBlockStart: theme.spacing(6),\n\t\t\tminHeight: \"95vh\",\n\t\t}),\n};\n","import { Container } from \"@mui/material\";\nimport {\n\tAppDrawer,\n\ttype AppDrawerProps,\n} from \"@n8v/app/components/fragments/app-drawer\";\nimport {\n\tAppFooter,\n\ttype AppFooterProps,\n} from \"@n8v/app/components/fragments/app-footer\";\nimport {\n\tAppHeader,\n\ttype AppHeaderProps,\n} from \"@n8v/app/components/fragments/app-header\";\nimport {\n\tPostHeader,\n\ttype PostHeaderProps,\n} from \"@n8v/app/components/fragments/post-header\";\nimport React from \"react\";\n\nimport { styles } from \"./styles\";\n\n// eslint-disable-next-line unicorn/prevent-abbreviations\nexport type PostTemplateProps = React.PropsWithChildren<{\n\tappDrawerProps: AppDrawerProps;\n\tappFooterProps: AppFooterProps;\n\tappHeaderProps: AppHeaderProps;\n\tpostHeaderProps: PostHeaderProps;\n}>;\n\nexport const PostTemplate = ({\n\tappDrawerProps,\n\tappFooterProps,\n\tappHeaderProps,\n\tchildren,\n\tpostHeaderProps,\n}: PostTemplateProps) => (\n\t<>\n\t\t<AppHeader {...appHeaderProps} />\n\t\t<AppDrawer {...appDrawerProps} />\n\t\t<Container css={styles.main} maxWidth=\"md\">\n\t\t\t<PostHeader {...postHeaderProps} css={styles.header} />\n\t\t\t{children}\n\t\t</Container>\n\t\t<AppFooter {...appFooterProps} />\n\t</>\n);\n"],"names":["styles","image","theme","css","backgroundColor","palette","augmentColor","color","main","background","paper","light","maxWidth","root","marginBlockEnd","spacing","width","PostImage","_ref","caption","src","cardProps","___EmotionJSX","Stack","_extends","alignItems","direction","alt","undefined","Typography","variant","PostHeader","date","title","stackProps","formatterDate","DateTime","fromISO","toLocaleString","DATE_FULL","header","marginBlockStart","minHeight","PostTemplate","appDrawerProps","appFooterProps","appHeaderProps","children","postHeaderProps","React","AppHeader","AppDrawer","Container","AppFooter"],"sourceRoot":""}