{"version":3,"file":"component---src-layouts-post-index-tsx-content-file-path-content-posts-personal-website-p-1-mdx-ecefe2a70a4faf3be050.js","mappings":"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","sources":["webpack://app/../node_modules/@mui/system/esm/Container/createContainer.js","webpack://app/../node_modules/@mui/material/Container/Container.js","webpack://app/./src/components/templates/post/index.tsx","webpack://app/./src/providers/mdx-provider.tsx","webpack://app/./content/posts/personal-website/p1.mdx","webpack://app/./src/layouts/post/index.tsx","webpack://app/../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import React from \"react\";\nimport { Container } from \"@mui/material\";\nimport { AppDrawer, AppDrawerProps } from \"@/components/organisms/app-drawer\";\nimport { AppHeader, AppHeaderProps } from \"@/components/organisms/app-header\";\n\nexport type PostTemplateProps = React.PropsWithChildren<{\n\tappDrawerProps: AppDrawerProps;\n\tappHeaderProps: AppHeaderProps;\n}>;\n\nexport const PostTemplate = ({\n\tappDrawerProps,\n\tappHeaderProps,\n\tchildren,\n}: PostTemplateProps) => {\n\treturn (\n\t\t<>\n\t\t\t<AppHeader {...appHeaderProps} />\n\t\t\t<AppDrawer {...appDrawerProps} />\n\t\t\t<Container maxWidth=\"lg\">{children}</Container>\n\t\t</>\n\t);\n};\n","import * as React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppTheme } from \"@/theme\";\n\nexport type AppMDXProviderProps = React.PropsWithChildren<{}>;\n\nconst h1 = (props: any) => <Typography gutterBottom variant=\"h1\" {...props} />;\nconst h2 = (props: any) => <Typography gutterBottom variant=\"h2\" {...props} />;\nconst h3 = (props: any) => <Typography gutterBottom variant=\"h3\" {...props} />;\nconst h4 = (props: any) => <Typography gutterBottom variant=\"h4\" {...props} />;\nconst h5 = (props: any) => <Typography gutterBottom variant=\"h5\" {...props} />;\nconst h6 = (props: any) => <Typography gutterBottom variant=\"h6\" {...props} />;\nconst text = (props: any) => <Typography variant=\"body1\" {...props} />;\nconst strong = (props: any) => (\n\t<Typography\n\t\tvariant=\"body1\"\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tfontWeight: theme.typography.fontWeightBold,\n\t\t})}\n\t\t{...props}\n\t/>\n);\nconst p = (props: any) => (\n\t<Typography\n\t\t{...props}\n\t\tvariant=\"body1\"\n\t\tparagraph\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tmarginBlockEnd: theme.spacing(1),\n\t\t})}\n\t/>\n);\nconst ul = (props: any) => (\n\t<ul\n\t\t{...props}\n\t\tcss={(theme: AppTheme) => ({\n\t\t\tmarginBlockStart: theme.spacing(0),\n\t\t\tmarginBlockEnd: theme.spacing(2),\n\t\t})}\n\t/>\n);\nconst li = (props: any) => <li {...props} css={{}} />;\n\nconst defaultComponents = {\n\ttext,\n\tp,\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6,\n\tstrong,\n\tul,\n\tli,\n} satisfies React.ComponentProps<typeof MDXProvider>[\"components\"];\n\nexport const AppMDXProvider = ({ children }: AppMDXProviderProps) => {\n\treturn <MDXProvider components={defaultComponents}>{children}</MDXProvider>;\n};\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"In this series of posts, I'll take you through the process of how I built my own website, exploring the tools, technologies, and decisions I made along the way.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/me/projects/ndthanhdev.github.io/app/content/posts/personal-website/p1.mdx\";\nimport * as React from \"react\";\nimport {useSiteMetadata} from \"@/shell/default-headers\";\nimport {MyHelmet} from \"@/components/atoms/my-helmet\";\nimport {PostTemplate} from \"@/components/templates/post\";\nimport {AppMDXProvider} from \"@/providers/mdx-provider\";\nimport {useAppDrawerStore} from \"@/stores/use-app-drawer-store\";\nimport {useThemeModeStore} from \"@/stores/use-theme-mode-store\";\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\nconst PostLayout = _ref => {\n  var _data$mdx, _data$mdx$frontmatter;\n  let {children, data} = _ref;\n  const siteMetadata = useSiteMetadata();\n  const drawer = useAppDrawerStore();\n  const theme = useThemeModeStore();\n  return ___EmotionJSX(AppMDXProvider, null, ___EmotionJSX(MyHelmet, null, ___EmotionJSX(\"title\", null, data === null || data === void 0 ? void 0 : (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title, \" | \", siteMetadata.title)), ___EmotionJSX(PostTemplate, {\n    appDrawerProps: {\n      onClose: drawer.closeDrawer,\n      open: drawer.open,\n      themeMode: theme.themeMode,\n      onThemeModeChange: (_, mode) => theme.setThemeMode(mode)\n    },\n    appHeaderProps: {\n      onOpenSettings: drawer.openDrawer,\n      themeMode: theme.themeMode,\n      onToggleThemeMode: theme.toggleThemeMode\n    }\n  }, children));\n};\nPostLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4095399130\";\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","Container","options","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","ref","className","component","other","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","PostTemplate","_ref","appDrawerProps","appHeaderProps","children","___EmotionJSX","React","AppHeader","AppDrawer","defaultComponents","text","Typography","_extends","variant","p","paragraph","css","marginBlockEnd","h1","gutterBottom","h2","h3","h4","h5","h6","strong","fontWeight","typography","fontWeightBold","ul","marginBlockStart","li","AppMDXProvider","_ref2","MDXProvider","components","_createMdxContent","_components","assign","_provideComponents","wrapper","MDXLayout","PostLayout","_data$mdx","_data$mdx$frontmatter","data","siteMetadata","useSiteMetadata","drawer","useAppDrawerStore","useThemeModeStore","MyHelmet","mdx","frontmatter","title","onClose","closeDrawer","open","themeMode","onThemeModeChange","_","mode","setThemeMode","onOpenSettings","openDrawer","onToggleThemeMode","toggleThemeMode","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider"],"sourceRoot":""}